//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace messageBroker {

class CSharpWrapperPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="SWIGRegisterExceptionCallbacks_CSharpWrapper")]
    public static extern void SWIGRegisterExceptionCallbacks_CSharpWrapper(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_CSharpWrapper")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_CSharpWrapper(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_CSharpWrapper(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_CSharpWrapper(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(CSharpWrapperPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(CSharpWrapperPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="SWIGRegisterStringCallback_CSharpWrapper")]
    public static extern void SWIGRegisterStringCallback_CSharpWrapper(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_CSharpWrapper(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static CSharpWrapperPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_Clear")]
  public static extern void stringvector_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_Add")]
  public static extern void stringvector_Add(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_size")]
  public static extern uint stringvector_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_capacity")]
  public static extern uint stringvector_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_reserve")]
  public static extern void stringvector_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_new_stringvector__SWIG_0")]
  public static extern global::System.IntPtr new_stringvector__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_new_stringvector__SWIG_1")]
  public static extern global::System.IntPtr new_stringvector__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_new_stringvector__SWIG_2")]
  public static extern global::System.IntPtr new_stringvector__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_getitemcopy")]
  public static extern string stringvector_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_getitem")]
  public static extern string stringvector_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_setitem")]
  public static extern void stringvector_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_AddRange")]
  public static extern void stringvector_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_GetRange")]
  public static extern global::System.IntPtr stringvector_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_Insert")]
  public static extern void stringvector_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_InsertRange")]
  public static extern void stringvector_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_RemoveAt")]
  public static extern void stringvector_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_RemoveRange")]
  public static extern void stringvector_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_Repeat")]
  public static extern global::System.IntPtr stringvector_Repeat(string jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_Reverse__SWIG_0")]
  public static extern void stringvector_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_Reverse__SWIG_1")]
  public static extern void stringvector_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_SetRange")]
  public static extern void stringvector_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_Contains")]
  public static extern bool stringvector_Contains(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_IndexOf")]
  public static extern int stringvector_IndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_LastIndexOf")]
  public static extern int stringvector_LastIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_stringvector_Remove")]
  public static extern bool stringvector_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_delete_stringvector")]
  public static extern void delete_stringvector(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_WSHost_set")]
  public static extern void nodeConfig_WSHost_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_WSHost_get")]
  public static extern string nodeConfig_WSHost_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_WSPort_set")]
  public static extern void nodeConfig_WSPort_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_WSPort_get")]
  public static extern int nodeConfig_WSPort_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_name_set")]
  public static extern void nodeConfig_name_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_name_get")]
  public static extern string nodeConfig_name_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_user_set")]
  public static extern void nodeConfig_user_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_user_get")]
  public static extern string nodeConfig_user_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_sqlite3Path_set")]
  public static extern void nodeConfig_sqlite3Path_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_sqlite3Path_get")]
  public static extern string nodeConfig_sqlite3Path_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_outputStream_set")]
  public static extern void nodeConfig_outputStream_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_outputStream_get")]
  public static extern string nodeConfig_outputStream_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_openPortsStart_set")]
  public static extern void nodeConfig_openPortsStart_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_openPortsStart_get")]
  public static extern int nodeConfig_openPortsStart_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_openPortsEnd_set")]
  public static extern void nodeConfig_openPortsEnd_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_openPortsEnd_get")]
  public static extern int nodeConfig_openPortsEnd_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_hashSeed_set")]
  public static extern void nodeConfig_hashSeed_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_nodeConfig_hashSeed_get")]
  public static extern string nodeConfig_hashSeed_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_new_nodeConfig")]
  public static extern global::System.IntPtr new_nodeConfig();

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_delete_nodeConfig")]
  public static extern void delete_nodeConfig(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_roomIdsVector_roomIds_set")]
  public static extern void roomIdsVector_roomIds_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_roomIdsVector_roomIds_get")]
  public static extern global::System.IntPtr roomIdsVector_roomIds_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_roomIdsVector_length_set")]
  public static extern void roomIdsVector_length_set(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_roomIdsVector_length_get")]
  public static extern uint roomIdsVector_length_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_new_roomIdsVector")]
  public static extern global::System.IntPtr new_roomIdsVector();

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_delete_roomIdsVector")]
  public static extern void delete_roomIdsVector(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_new_messageHandler")]
  public static extern global::System.IntPtr new_messageHandler();

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_messageHandler_handle")]
  public static extern void messageHandler_handle(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_delete_messageHandler")]
  public static extern void delete_messageHandler(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_messageHandler_director_connect")]
  public static extern void messageHandler_director_connect(global::System.Runtime.InteropServices.HandleRef jarg1, messageHandler.SwigDelegatemessageHandler_0 delegate0);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_new_messageBroker")]
  public static extern global::System.IntPtr new_messageBroker(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_delete_messageBroker")]
  public static extern void delete_messageBroker(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_messageBroker_start")]
  public static extern void messageBroker_start(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_messageBroker_addCallbackToRoom")]
  public static extern void messageBroker_addCallbackToRoom(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_messageBroker_joinRoom")]
  public static extern void messageBroker_joinRoom(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_messageBroker_send2client")]
  public static extern void messageBroker_send2client(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_messageBroker_broadcast2Room")]
  public static extern void messageBroker_broadcast2Room(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_messageBroker_leaveRoom")]
  public static extern void messageBroker_leaveRoom(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_messageBroker_getRoomIdsVector")]
  public static extern global::System.IntPtr messageBroker_getRoomIdsVector(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_messageBroker_getNodeConfig")]
  public static extern global::System.IntPtr messageBroker_getNodeConfig(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("CSharpWrapper", EntryPoint="CSharp_messageBroker_messageBroker_getNodeIds")]
  public static extern global::System.IntPtr messageBroker_getNodeIds(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);
}

}
